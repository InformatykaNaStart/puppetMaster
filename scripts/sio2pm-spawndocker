#!/usr/bin/python3

import argparse
import datetime
import getpass
import json
import logging
import packet.api
import packet.vm


start = datetime.datetime.now()

parser = argparse.ArgumentParser()
parser.add_argument('--verbose', action='store_const', const=True)
parser.add_argument('--hostName')
parser.add_argument('--paramFile', help='text file containing docker run parameters (as a simple one-line string)')
parser.add_argument('--paramStr', help='string containing all docker run parameters')
parser.add_argument('--cmd', help='docker run cmd override')
parser.add_argument('-s', '--substitute', nargs=2, action='append', default=[], help='values for placeholders in docker run parameters ')
parser.add_argument('--maxBid', help='maximum bidding price', default=0.03, type=float)
parser.add_argument('--bidOver', help='how much over the current market price to bid (e.g. 0.2 - bid 20% over)', default=0.1, type=float)
parser.add_argument('--apiToken')
parser.add_argument('--projectId')
parser.add_argument('imageName')
args = parser.parse_args()

if args.hostName is not None and args.hostName == 'localhost':
    raise Exception('Nothing will work with the --hostName set to "localhost". Please try something else.')

logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.INFO if args.verbose else logging.ERROR)

param = []
if args.paramStr is not None:
    param.append(args.paramStr)
if args.paramFile is not None:
    with open(args.paramFile) as f:
       param.append(f.readline().strip('\n'))
param = ' '.join(param)

paramSubst = dict(zip([x[0] for x in args.substitute], [x[1] for x in args.substitute]))

cmd = ''
if args.cmd is not None:
    cmd = args.cmd

if args.apiToken is None or args.projectId is None:
    logging.info('--apiToken and/or --projectId not specified - running locally\n')
    if args.hostName is None:
        raise Exception('The --hostName parameter is required when running locally')
    vm = packet.vm.Vm()
    vm.ip = args.hostName
    vm.username = getpass.getuser()
else:
    vmParam = packet.vm.Vm.paramTmpl
    if args.hostName is not None:
        vmParam['hostname'] = args.hostName

    api = packet.api.Api(args.apiToken)
    vm = packet.vm.Vm(api)
    vm.setBid(args.maxBid, args.bidOver)
    vm.create(args.projectId, vmParam)
    logging.info('Elapsed time %d s' % (datetime.datetime.now() - start).total_seconds())
    vm.installDocker()

logging.info('The VM is ready (%s). Elapsed time %d. Running the docker container\n' % (vm.ip, (datetime.datetime.now() - start).total_seconds()))
vm.runDockerContainer(args.imageName, param, cmd, paramSubst)
logging.info('Docker container run. Elapsed time %d s' % (datetime.datetime.now() - start).total_seconds())

